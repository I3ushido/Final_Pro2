#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.21
#  in conjunction with Tcl version 8.6
#    Jun 24, 2019 12:44:37 PM +07  platform: Windows NT

import sys


try:
    import Tkinter as tk, threading
except ImportError:
    import tkinter as tk, threading

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import unknown_support

import numpy as np
import cv2
import time
#import tkinter as tk, threading
import imageio
from PIL import Image, ImageTk


############
def stream(label):

    for image in video.iter_data():
        frame_image = ImageTk.PhotoImage(Image.fromarray(image))
        label.config(image=frame_image)
        label.image = frame_image
############

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    unknown_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    unknown_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None


video_name = "Day2.mov" 
video = imageio.get_reader(video_name)

class Toplevel1:

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1719x840+325+103")
        top.title("Error")
        top.configure(background="#d8d8d8")
        top.configure(highlightbackground="#f0f0f0f0f0f0")
        top.configure(highlightcolor="#636363")

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.006, rely=0.0, height=24, width=100)
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Select File''')

        self.Button1_1 = tk.Button(top)
        self.Button1_1.place(relx=0.064, rely=0.0, height=24, width=100)
        self.Button1_1.configure(activebackground="#ececec")
        self.Button1_1.configure(activeforeground="#000000")
        self.Button1_1.configure(background="#d9d9d9")
        self.Button1_1.configure(disabledforeground="#a3a3a3")
        self.Button1_1.configure(foreground="#000000")
        self.Button1_1.configure(highlightbackground="#d9d9d9")
        self.Button1_1.configure(highlightcolor="black")
        self.Button1_1.configure(pady="0")
        self.Button1_1.configure(text='''Process''')

        self.Text1 = tk.Text(top)
        self.Text1.place(relx=0.512, rely=0.012, relheight=0.029, relwidth=0.084)

        self.Text1.configure(background="white")
        self.Text1.configure(font="TkTextFont")
        self.Text1.configure(foreground="black")
        self.Text1.configure(highlightbackground="#d9d9d9")
        self.Text1.configure(highlightcolor="black")
        self.Text1.configure(insertbackground="black")
        self.Text1.configure(selectbackground="#c4c4c4")
        self.Text1.configure(selectforeground="black")
        self.Text1.configure(width=144)
        self.Text1.configure(wrap='word')

        self.Text1_3 = tk.Text(top)
        self.Text1_3.place(relx=0.622, rely=0.012, relheight=0.029
                , relwidth=0.084)
        self.Text1_3.configure(background="white")
        self.Text1_3.configure(font="TkTextFont")
        self.Text1_3.configure(foreground="black")
        self.Text1_3.configure(highlightbackground="#d9d9d9")
        self.Text1_3.configure(highlightcolor="black")
        self.Text1_3.configure(insertbackground="black")
        self.Text1_3.configure(selectbackground="#c4c4c4")
        self.Text1_3.configure(selectforeground="black")
        self.Text1_3.configure(width=144)
        self.Text1_3.configure(wrap='word')

        self.TLabel1 = ttk.Label(top)
        self.TLabel1.place(relx=0.465, rely=0.012, height=19, width=76)
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font="TkDefaultFont")
        self.TLabel1.configure(relief='flat')
        self.TLabel1.configure(text='''Rectangle X :''')

        self.TLabel1_4 = ttk.Label(top)
        self.TLabel1_4.place(relx=0.605, rely=0.012, height=19, width=26)
        self.TLabel1_4.configure(background="#d9d9d9")
        self.TLabel1_4.configure(foreground="#000000")
        self.TLabel1_4.configure(font="TkDefaultFont")
        self.TLabel1_4.configure(relief='flat')
        self.TLabel1_4.configure(text='''Y :''')

        self.TLabel1_5 = ttk.Label(top)
        self.TLabel1_5.place(relx=0.483, rely=0.048, height=19, width=76)
        self.TLabel1_5.configure(background="#d9d9d9")
        self.TLabel1_5.configure(foreground="#000000")
        self.TLabel1_5.configure(font="TkDefaultFont")
        self.TLabel1_5.configure(relief='flat')
        self.TLabel1_5.configure(text='''Line X :''')

        self.Text1_6 = tk.Text(top)
        self.Text1_6.place(relx=0.512, rely=0.042, relheight=0.029
                , relwidth=0.084)
        self.Text1_6.configure(background="white")
        self.Text1_6.configure(font="TkTextFont")
        self.Text1_6.configure(foreground="black")
        self.Text1_6.configure(highlightbackground="#d9d9d9")
        self.Text1_6.configure(highlightcolor="black")
        self.Text1_6.configure(insertbackground="black")
        self.Text1_6.configure(selectbackground="#c4c4c4")
        self.Text1_6.configure(selectforeground="black")
        self.Text1_6.configure(width=144)
        self.Text1_6.configure(wrap='word')

        self.TLabel1_1 = ttk.Label(top)
        self.TLabel1_1.place(relx=0.605, rely=0.048, height=19, width=26)
        self.TLabel1_1.configure(background="#d9d9d9")
        self.TLabel1_1.configure(foreground="#000000")
        self.TLabel1_1.configure(font="TkDefaultFont")
        self.TLabel1_1.configure(relief='flat')
        self.TLabel1_1.configure(text='''Y :''')

        self.Text1_7 = tk.Text(top)
        self.Text1_7.place(relx=0.622, rely=0.042, relheight=0.029
                , relwidth=0.084)
        self.Text1_7.configure(background="white")
        self.Text1_7.configure(font="TkTextFont")
        self.Text1_7.configure(foreground="black")
        self.Text1_7.configure(highlightbackground="#d9d9d9")
        self.Text1_7.configure(highlightcolor="black")
        self.Text1_7.configure(insertbackground="black")
        self.Text1_7.configure(selectbackground="#c4c4c4")
        self.Text1_7.configure(selectforeground="black")
        self.Text1_7.configure(width=144)
        self.Text1_7.configure(wrap='word')

        self.Text1_8 = tk.Text(top)
        self.Text1_8.place(relx=0.372, rely=0.012, relheight=0.029
                , relwidth=0.061)
        self.Text1_8.configure(background="white")
        self.Text1_8.configure(font="TkTextFont")
        self.Text1_8.configure(foreground="black")
        self.Text1_8.configure(highlightbackground="#d9d9d9")
        self.Text1_8.configure(highlightcolor="black")
        self.Text1_8.configure(insertbackground="black")
        self.Text1_8.configure(selectbackground="#c4c4c4")
        self.Text1_8.configure(selectforeground="black")
        self.Text1_8.configure(width=104)
        self.Text1_8.configure(wrap='word')

        self.Text1_9 = tk.Text(top)
        self.Text1_9.place(relx=0.372, rely=0.048, relheight=0.029
                , relwidth=0.061)
        self.Text1_9.configure(background="white")
        self.Text1_9.configure(font="TkTextFont")
        self.Text1_9.configure(foreground="black")
        self.Text1_9.configure(highlightbackground="#d9d9d9")
        self.Text1_9.configure(highlightcolor="black")
        self.Text1_9.configure(insertbackground="black")
        self.Text1_9.configure(selectbackground="#c4c4c4")
        self.Text1_9.configure(selectforeground="black")
        self.Text1_9.configure(width=104)
        self.Text1_9.configure(wrap='word')

        self.TLabel1_10 = ttk.Label(top)
        self.TLabel1_10.place(relx=0.337, rely=0.012, height=19, width=56)
        self.TLabel1_10.configure(background="#d9d9d9")
        self.TLabel1_10.configure(foreground="#000000")
        self.TLabel1_10.configure(font="TkDefaultFont")
        self.TLabel1_10.configure(relief='flat')
        self.TLabel1_10.configure(text='''Min area :''')

        self.TLabel1_11 = ttk.Label(top)
        self.TLabel1_11.place(relx=0.337, rely=0.048, height=19, width=56)
        self.TLabel1_11.configure(background="#d9d9d9")
        self.TLabel1_11.configure(foreground="#000000")
        self.TLabel1_11.configure(font="TkDefaultFont")
        self.TLabel1_11.configure(relief='flat')
        self.TLabel1_11.configure(text='''Max area :''')

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.012, rely=0.107, height=720, width=1280)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Label''')
        self.Label1.configure(text='''Label''')

        video_name = "Day2.mov" 
        video = imageio.get_reader(video_name)
        


        
    




if __name__ == '__main__':    
    vp_start_gui()
    root = tk.Tk()
    my_label = tk.Label(root)
    my_label.pack()
    thread = threading.Thread(target=stream, args=(my_label,))
    thread.daemon = 1
    thread.start()
    root.mainloop()





